# Generated by Django 5.0.7 on 2024-07-31 05:04

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Books',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('price', models.FloatField()),
                ('description', models.TextField()),
                ('additional_details', models.TextField()),
                ('image', models.ImageField(upload_to='books')),
                ('availability', models.CharField(choices=[('in stock', 'In Stock'), ('out of stock', 'Out of Stock')], default='In Stock', max_length=30)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('last_edited', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('date', models.DateTimeField()),
                ('location', models.CharField(max_length=150)),
                ('description', models.TextField()),
                ('image', models.ImageField(upload_to='events/')),
                ('additional_informations', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('last_edited', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Materials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('type', models.CharField(max_length=250)),
                ('supplier_name', models.CharField(max_length=250)),
                ('supplier_phone_no', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='IN')),
                ('price', models.FloatField()),
                ('discount_percentage', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('title', models.CharField(max_length=250)),
                ('availability', models.CharField(choices=[('in stock', 'In Stock'), ('out of stock', 'Out of Stock')], default='in stock', max_length=30)),
                ('image', models.ImageField(upload_to='materials/')),
                ('description', models.TextField()),
                ('overview', models.TextField(blank=True, null=True)),
                ('additional_details', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('last_edited', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('recipient', models.CharField(choices=[('all users', 'All Users')], max_length=100)),
                ('status', models.CharField(choices=[('sent', 'Sent'), ('pending', 'Pending'), ('failed', 'Failed')], default='pending', max_length=25)),
                ('body', models.TextField()),
                ('image', models.ImageField(upload_to='notifications/')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('last_edited', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Professionals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('phone_no', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='IN', unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('expertise', models.CharField(max_length=250)),
                ('location', models.CharField(max_length=150)),
                ('about', models.TextField()),
                ('experiance', models.TextField()),
                ('portfolio', models.FileField(upload_to='professionals/portfolios')),
                ('banner', models.ImageField(upload_to='professionals/banners')),
                ('website', models.URLField(blank=True, max_length=500, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('last_edited', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Transactions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateTimeField(auto_now=True)),
                ('user_involved', models.CharField(max_length=150)),
                ('type', models.CharField(choices=[('payment', 'Payment'), ('refund', 'Refund')], max_length=100)),
                ('amount', models.FloatField()),
                ('status', models.CharField(choices=[('completed', 'Completed'), ('pending', 'Pending'), ('refunded', 'Refunded')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdminUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('image', models.ImageField(blank=True, null=True, upload_to='profile_images/')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('designation', models.CharField(blank=True, max_length=200, null=True)),
                ('phone_no', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region='IN')),
                ('is_active', models.BooleanField(default=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('last_edited', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MobileUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('image', models.ImageField(blank=True, null=True, upload_to='profile_images/')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_no', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='IN', unique=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('last_edited', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('fcm_token', models.TextField(blank=True, null=True)),
                ('otp', models.CharField(blank=True, max_length=4, null=True)),
                ('referral_code', models.CharField(max_length=16, unique=True)),
                ('total_referrels', models.IntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateField(auto_now_add=True)),
                ('last_edited', models.DateTimeField(auto_now=True)),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('review', models.TextField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='reviewed_by', to=settings.AUTH_USER_MODEL)),
                ('professional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_professional', to='core.professionals')),
            ],
        ),
        migrations.CreateModel(
            name='Referrals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('referred', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='referred_by', to='core.mobileusers')),
                ('referrer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referrals', to='core.mobileusers')),
            ],
        ),
    ]
